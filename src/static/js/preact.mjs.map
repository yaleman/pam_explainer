{"mappings":"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","names":["slice","options","vnodeId","isValidElement","rerenderQueue","prevDebounce","defer","depthSort","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","isArray","Array","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","createVNode","original","vnode","__k","__","__b","__e","__d","__c","__h","constructor","__v","createRef","current","Fragment","Component","context","this","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","__r","debounceRendering","renderQueueLength","component","commitQueue","refQueue","oldVNode","oldDom","parentDom","sort","shift","__P","diff","__n","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","skewedIndex","matchingIndex","isMounting","skew","oldChildren","oldChildrenLength","remainingOldChildren","newChildrenLength","findMatchingIndex","applyRef","nextSibling","placeChild","reorderChildren","unmount","tmp","toChildArray","out","some","insertBefore","x","y","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","value","test","name","oldValue","useCapture","o","cssText","replace","toLowerCase","l","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","removeAttribute","setAttribute","event","newVNode","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","renderHook","count","newType","outer","contextType","__E","prototype","render","doRender","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","firstChild","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","error","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","then","bind","resolve","setTimeout","a","b"],"sourceRoot":"/","sources":["../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/util.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/options.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/create-element.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/component.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/create-context.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/constants.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/diff/children.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/diff/props.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/diff/index.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/render.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/clone-element.js","../esmd/npm/preact@10.17.1/node_modules/.pnpm/preact@10.17.1/node_modules/preact/src/diff/catch-error.js"],"sourcesContent":["import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O \u0026 P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O \u0026 P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O \u0026 P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array\u003cimport('.').ComponentChildren\u003e} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length \u003e 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length \u003e 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' \u0026\u0026 type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null \u0026\u0026 options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =\u003e\n\tvnode != null \u0026\u0026 vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) =\u003e object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() =\u003e void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null \u0026\u0026 this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() =\u003e void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex \u003c vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null \u0026\u0026 sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [],\n\t\t\trefQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\tcommitRoot(commitQueue, vnode, refQueue);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null \u0026\u0026 vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i \u003c vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null \u0026\u0026 child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array\u003cimport('./internal').Component\u003e}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty \u0026\u0026\n\t\t\t(c._dirty = true) \u0026\u0026\n\t\t\trerenderQueue.push(c) \u0026\u0026\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) =\u003e a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length \u003e renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () =\u003e ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c =\u003e {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c =\u003e {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c =\u003e {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c =\u003e {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () =\u003e {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array\u003cimport('../internal').PreactElement\u003e} excessDomChildren\n * @param {Array\u003cimport('../internal').Component\u003e} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {Array\u003cany\u003e} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\tj,\n\t\toldVNode,\n\t\tchildVNode,\n\t\tnewDom,\n\t\tfirstChildDom,\n\t\tskew = 0;\n\n\t// This is a compression of oldParentVNode!=null \u0026\u0026 oldParentVNode != EMPTY_OBJ \u0026\u0026 oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode \u0026\u0026 oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength,\n\t\tnewChildrenLength = renderResult.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i \u003c newChildrenLength; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. \u003cdiv\u003e{reuse}{reuse}\u003c/div\u003e) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM \u0026 etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth \u003e 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = \u003cdiv /\u003e\n\t\t\t//   \u003cdiv\u003e{reuse}\u003cspan /\u003e{reuse}\u003c/div\u003e\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode \u0026\u0026 oldVNode.key == null \u0026\u0026 oldVNode._dom) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\t\t\t\toldChildren[i] = null;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tlet skewedIndex = i + skew;\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\tif (matchingIndex === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[matchingIndex] || EMPTY_OBJ;\n\t\t\toldChildren[matchingIndex] = undefined;\n\t\t\tremainingOldChildren--;\n\t\t}\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\t\tif ((j = childVNode.ref) \u0026\u0026 oldVNode.ref != j) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tlet isMounting = oldVNode === EMPTY_OBJ || oldVNode._original === null;\n\t\t\tif (isMounting) {\n\t\t\t\tif (matchingIndex == -1) {\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\t\tskew++;\n\t\t\t\t} else if (matchingIndex \u003e skewedIndex) {\n\t\t\t\t\tif (remainingOldChildren \u003e newChildrenLength - skewedIndex) {\n\t\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ### Change from keyed: I think this was missing from the algo...\n\t\t\t\t\t\tskew--;\n\t\t\t\t\t}\n\t\t\t\t} else if (matchingIndex \u003c skewedIndex) {\n\t\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tskew = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tskew = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tskewedIndex = i + skew;\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' \u0026\u0026\n\t\t\t\t(matchingIndex !== skewedIndex ||\n\t\t\t\t\toldVNode._children === childVNode._children)\n\t\t\t) {\n\t\t\t\toldDom = reorderChildren(childVNode, oldDom, parentDom);\n\t\t\t} else if (\n\t\t\t\ttypeof childVNode.type != 'function' \u0026\u0026\n\t\t\t\t(matchingIndex !== skewedIndex || isMounting)\n\t\t\t) {\n\t\t\t\toldDom = placeChild(parentDom, newDom, oldDom);\n\t\t\t} else if (childVNode._nextDom !== undefined) {\n\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t\t\t// of last DOM child of this child VNode\n\t\t\t\toldDom = childVNode._nextDom;\n\n\t\t\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t\t\t// can clean up the property\n\t\t\t\tchildVNode._nextDom = undefined;\n\t\t\t} else {\n\t\t\t\toldDom = newDom.nextSibling;\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' \u0026\u0026\n\t\t\t\toldChildren[i]._dom != null \u0026\u0026\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\n\t\t\t\tnewParentVNode._nextDom = oldChildren[i]._dom.nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\n\tlet tmp = 0;\n\tfor (; c \u0026\u0026 tmp \u003c c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child =\u003e {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(parentDom, newDom, oldDom) {\n\tif (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\tparentDom.insertBefore(newDom, null);\n\t} else if (newDom != oldDom || newDom.parentNode == null) {\n\t\tparentDom.insertBefore(newDom, oldDom);\n\t}\n\n\treturn newDom.nextSibling;\n}\n\n/**\n * @param {import('../internal').VNode | string} childVNode\n * @param {import('../internal').VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode \u0026\u0026 key == oldVNode.key \u0026\u0026 type === oldVNode.type)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (remainingOldChildren \u003e (oldVNode != null ? 1 : 0)) {\n\t\twhile (x \u003e= 0 || y \u003c oldChildren.length) {\n\t\t\tif (x \u003e= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (oldVNode \u0026\u0026 key == oldVNode.key \u0026\u0026 type === oldVNode.type) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y \u003c oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (oldVNode \u0026\u0026 key == oldVNode.key \u0026\u0026 type === oldVNode.type) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' \u0026\u0026 i !== 'key' \u0026\u0026 !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') \u0026\u0026\n\t\t\ti !== 'children' \u0026\u0026\n\t\t\ti !== 'key' \u0026\u0026\n\t\t\ti !== 'value' \u0026\u0026\n\t\t\ti !== 'checked' \u0026\u0026\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value \u0026\u0026 name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' \u0026\u0026 name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/(PointerCapture)$|Capture$/, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --\u003e href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --\u003e class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' \u0026\u0026\n\t\t\tname !== 'height' \u0026\u0026\n\t\t\tname !== 'href' \u0026\u0026\n\t\t\tname !== 'list' \u0026\u0026\n\t\t\tname !== 'form' \u0026\u0026\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' \u0026\u0026\n\t\t\tname !== 'download' \u0026\u0026\n\t\t\tname !== 'rowSpan' \u0026\u0026\n\t\t\tname !== 'colSpan' \u0026\u0026\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null \u0026\u0026 (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array\u003cimport('../internal').PreactElement\u003e} excessDomChildren\n * @param {Array\u003cimport('../internal').Component\u003e} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {Array\u003cany\u003e} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp \u0026\u0026 globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType \u0026\u0026 newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null \u0026\u0026\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null \u0026\u0026\n\t\t\t\t\tnewProps !== oldProps \u0026\u0026\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force \u0026\u0026\n\t\t\t\t\t((c.shouldComponentUpdate != null \u0026\u0026\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode =\u003e {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i \u003c c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() =\u003e {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType \u0026\u0026 newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i \u003c c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty \u0026\u0026 ++count \u003c 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew \u0026\u0026 c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null \u0026\u0026 tmp.type === Fragment \u0026\u0026 tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null \u0026\u0026\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array\u003cimport('../internal').Component\u003e} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i \u003c refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c =\u003e {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb =\u003e {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array\u003cimport('../internal').Component\u003e} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {Array\u003cany\u003e} refQueue an array of elements needed to invoke refs\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i \u003c excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild \u0026\u0026\n\t\t\t\t'setAttribute' in child === !!nodeType \u0026\u0026\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is \u0026\u0026 newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps \u0026\u0026 (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren \u0026\u0026 slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i \u003c dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) \u0026\u0026\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml \u0026\u0026 newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg \u0026\u0026 nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children \u0026\u0026 getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps \u0026\u0026\n\t\t\t\t(i = newProps.value) !== undefined \u0026\u0026\n\t\t\t\t// #2756 For the \u003cprogress\u003e-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' \u0026\u0026 !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix \u003cselect\u003e value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' \u0026\u0026 i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps \u0026\u0026\n\t\t\t\t(i = newProps.checked) !== undefined \u0026\u0026\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i \u003c r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove \u0026\u0026 vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode \u0026\u0026 replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating \u0026\u0026 replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating \u0026\u0026 replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating \u0026\u0026 replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array\u003cimport('./internal').ComponentChildren\u003e} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type \u0026\u0026 vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined \u0026\u0026 defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length \u003e 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length \u003e 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) \u0026\u0026 !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor \u0026\u0026 ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"],"version":3}
